depth
reinf_pm2
reinf_pm3
library(shiny)          #shiny allows tranlation of R script into HTML
library(pracma)         #library for bi-linear interpolation fucntion
library(shinydashboard, warn.conflicts = FALSE) #shiny dashboard builder
#library(plotly)         #for plotting interactive plots
library(readxl)         #library for reading excel files
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
rc_depth_table <- load_span_table_df("./hollowcore-load-span-table.xlsx", "span")
rc_depth_table
table <- load_span_table_df("./hollowcore-load-span-table.xlsx", "span")
table
saveRDS(table, file = "rc_multiple_span_flat_slab_tables.rds")
rc_depth_table <- load_span_table_df("./multiple-span-flat-slab.xlsx", "depth")
rc_depth_table
rc_reinf_pm2_table <- load_span_table_df("./multiple-span-flat-slab reinforcement_pm2.xlsx", "reinf_pm2")
rc_reinf_pm2_table
rc_reinf_pm3_table <- load_span_table_df("./multiple-span-flat-slab reinforcement_pm3.xlsx", "reinf_pm3")
rc_tables <- rbind(rc_depth_table,rc_reinf_pm2_table,rc_reinf_pm3_table)
rc_tables
saveRDS(rc_tables, file = "rc_multiple_span_flat_slab_tables.rds")
readRDS(file = "rc_multiple_span_flat_slab_tables.rds" )
saveRDS(table, file = "hollowcore_table.rds")
readRDS(file = "hollowcore_table.rds" )
table <- load_span_table_df("./hollowcore-load-span-table.xlsx", "span")
table
saveRDS(table, file = "hollowcore_table.rds")
readRDS(file = "hollowcore_table.rds" )
#creating a table for CLT
table <- load_span_table_df("./CLT-load-span-table.xlsx", "span")
table
saveRDS(table, file = "clt_table.rds")
readRDS(file = "clt_table.rds" )
# getting SPAN parameters
get_span <- function(dataframe,  depth_slab, imposed_loading){
df <- masking_rc_slab(dataframe, "reinf_pm3")
df <- interp_bh_dflt(reinf_pm3_df, x_i = imposed_loading, y_i = depth_slab , method_i = "linear")
return(df)
}
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
readRDS(file = "hollowcore_table.rds" )
test_hc_df <- readRDS(file = "hollowcore_table.rds" )
test_hc_df <- readRDS(file = "hollowcore_table.rds" )
get_span(test_hc_df, 200, 15)
# getting SPAN parameters
get_span <- function(dataframe,  depth_slab, imposed_loading){
df <- masking_rc_slab(dataframe, "span")
df_span <- interp_bh_dflt(reinf_pm3_df, x_i = imposed_loading, y_i = depth_slab , method_i = "linear")
return(df_span)
}
test_hc_df <- readRDS(file = "hollowcore_table.rds" )
get_span(test_hc_df, 200, 15)
df <- masking_rc_slab(test_hc_df, "span")
df
test_hc_df
df <- masking_rc_slab(test_hc_df, "span")
df
get_span(test_hc_df, 200, 10.5)
interp_bh_dflt(df, 7.5, 150, method_i = "linear")
get_span(test_hc_df, 150, 10.5)
interp_bh_dflt(df, 7.5, 150, method_i = "linear")
#-------INTERPOLATION FUNCTION FOR DEFAULT VALUES --------
interp_bh_dflt <- function(original_df,x_i,y_i,method_i){
z <- original_df[2:ncol(original_df)] #remove column with the name
original_df_matrix <- as.matrix(z) #transform from df into a matrix
original_df <- as.matrix(original_df)
x <- as.vector(as.numeric(colnames(original_df)))[2:length(colnames(original_df))]
y <- as.vector(original_df[,1])
if (isTRUE(x_i==max(x))){
x_i <- x_i - 1e-10
}
z <- interp2(x, y, original_df_matrix,
x_i, y_i, method_i)
#print(original_df_matrix)
return(z)
}
interp_bh_dflt(df, 7.5, 150, method_i = "linear")
get_span(test_hc_df, 150, 10.5)
get_span(test_hc_df, 150, 7.5)
# getting SPAN parameters
get_span <- function(dataframe,  depth_slab, imposed_loading){
df <- masking_rc_slab(dataframe, "span")
df_span <- interp_bh_dflt(df, x_i = imposed_loading, y_i = depth_slab , method_i = "linear")
return(df_span)
}
test_hc_df <- readRDS(file = "hollowcore_table.rds" )
test_hc_df
df <- masking_rc_slab(test_hc_df, "span")
df
interp_bh_dflt(df, 7.5, 150, method_i = "linear")
get_span(test_hc_df, 150, 7.5)
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
test_df <- readRDS(file = "hollowcore_table.rds" )
test_df <- masking_rc_slab(test_df, "span")
test_df
original_df <- test_df
z <- original_df[2:ncol(original_df)] #remove column with the name
str(z)
original_df_matrix <- as.matrix(z) #transform from df into a matrix
str(original_df_matrix)
original_df <- test_df
z <- original_df[2:ncol(original_df)] #remove column with the name
str(z)
original_df_matrix <- as.matrix(z) #transform from df into a matrix
str(original_df_matrix)
is.numeric(original_df_matrix)
is.matrix(original_df_matrix)
original_df <- as.matrix(original_df)
x <- as.vector(as.numeric(colnames(original_df)))[2:length(colnames(original_df))]
y <- as.vector(original_df[,1])
is.numeric(y)
is.numeric(x)
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
#creating a table for SDl + IL = IL
table <- load_span_table_df("./sdl_to_il.xlsx", "il")
table
saveRDS(table, file = "clt_table.rds")
readRDS(file = "clt_table.rds" )
#creating a table for SDl + IL = IL
table <- load_span_table_df("./sdl_to_il.xlsx", "il")
table
saveRDS(table, file = "sdl_to_il_table.rds")
readRDS(file = "sdl_to_il_table.rds" )
get_il(ll)
# getting SPAN parameters
get_il <- function(dataframe,  sdll, ill){
df <- masking_rc_slab(dataframe, "il")
df_span <- interp_bh_dflt(df, x_i = sdll, y_i = ill  , method_i = "linear")
return(df_span)
}
ll<-readRDS(file = "sdl_to_il_table.rds" )
get_il(ll)
get_il(ll, sdll =4, ill = 10)
get_il(ll, sdll =1, ill = 10)
#-------INTERPOLATION FUNCTION FOR DEFAULT VALUES --------
interp_bh_dflt <- function(original_df,x_i,y_i,method_i){
z <- original_df[2:ncol(original_df)] #remove column with the name
original_df_matrix <- data.matrix(z) #transform from df into a matrix
original_df <- as.matrix(original_df)
x1 <- as.vector(as.numeric(colnames(original_df)))[2:length(colnames(original_df))]
y1 <- as.numeric(as.vector(original_df[,1]))
if (isTRUE(x_i==max(x1))){
x_i <- x_i - 1e-10
}
z <- interp2(x = x1, y = y1, Z = original_df_matrix,
x_i, y_i, method_i)
#print(original_df_matrix)
return(z)
}
ll<-readRDS(file = "sdl_to_il_table.rds" )
get_il(ll, sdll =1, ill = 10)
get_il(ll, sdll =1, ill = 10)
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
#creating a table for CLT
table <- load_span_table_df("./CLT-load-span-table.xlsx", "span")
table
saveRDS(table, file = "clt_table.rds")
readRDS(file = "clt_table.rds" )
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
library(plotly)
# Get Manufacturer
mtcars$manuf <- sapply(strsplit(rownames(mtcars), " "), "[[", 1)
mtcars$manuf
mtcars
str(mtcars)
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
# Get Manufacturer
mtcars$manuf <- sapply(strsplit(rownames(mtcars), " "), "[[", 1)
p <- mtcars %>%
group_by(manuf) %>%
summarize(count = n()) %>%
plot_ly(labels = ~manuf, values = ~count) %>%
add_pie(hole = 0.6) %>%
layout(title = "Donut charts using Plotly",  showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
install.packages("Hmisc")
library(plotly)
library(Hmisc)
# Get Manufacturer
mtcars$manuf <- sapply(strsplit(rownames(mtcars), " "), "[[", 1)
p <- mtcars %>%
group_by(manuf) %>%
summarize(count = n()) %>%
plot_ly(labels = ~manuf, values = ~count) %>%
add_pie(hole = 0.6) %>%
layout(title = "Donut charts using Plotly",  showlegend = F,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
library(shiny); runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
x <- data.frame("depth" = c(150,200,250,260,300,350,400,450), "self-weight (kN/m^2)" = c(2.36,3.02,2.98,3.62,3.47,3.99,4.53,5.15,5.46))
x <- data.frame("depth" = c(150,200,250,260,300,350,400,450), "self-weight (kN/m^2)" = c(2.36,2.98,3.62,3.47,3.99,4.53,5.15,5.46))
x
x <- data.frame("depth" = c(150,200,250,260,300,350,400,450), "selfweight kN pm2)" = c(2.36,2.98,3.62,3.47,3.99,4.53,5.15,5.46))
x
x <- data.frame("depth" = c(150,200,250,260,300,350,400,450), "selfweight_kN_pm2)" = c(2.36,2.98,3.62,3.47,3.99,4.53,5.15,5.46))
x
x <- data.frame("depth" = c(150,200,250,260,300,350,400,450), "selfweight_kN_pm2" = c(2.36,2.98,3.62,3.47,3.99,4.53,5.15,5.46))
x
x <- data.frame("depth" = c(150,200,250,260,300,350,400,450),
"selfweight_kN_pm2" = c(2.36,2.98,3.62,3.47,3.99,4.53,5.15,5.46))
x
mask = x$depth==250
df_selection <- x[which(mask), ]
df_selection
df_selection[2]
as.numeric(df_selection[2])
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
12.5*10e-3
12.5*10e-4
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
pi()
pi
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
library("ggplot2")
df <- data.frame(a = c(4, 3, 3, 8, 1, 1, 10),
b = c("x", "x", "x", "y", "y", "y", "z"),
c = c("x1", "x2", "x3", "y1", "y2", "y3", "z1"))
ggplot(df, aes(x = b, y = a, fill = c))+
geom_bar(stat = "identity")+
coord_polar(theta="y")
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
library("ggplot2")
df <- data.frame(a = c(4, 3, 3, 8, 1, 1, 10),
b = c("x", "x", "x", "y", "y", "y", "z"),
c = c("x1", "x2", "x3", "y1", "y2", "y3", "z1"))
ggplot(df, aes(x = b, y = a, fill = c))+
geom_bar(stat = "identity")+
coord_polar(theta="y")
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
