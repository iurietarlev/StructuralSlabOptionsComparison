stat_summary(fun.y=mean, geom="point") + theme_1
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=1, outlier.size = 0.3) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
scale_y_continuous(limits = c(min(df$sil_coeff), max(df$sil_coeff)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
#scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
#scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 #+
#scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary_1.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
coord_cartesian(ylim = quantile(df$sil_coeff, c(0.1, 0.9))) # scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary_2.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=1) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
coord_cartesian(ylim = quantile(df$sil_coeff, c(0.1, 0.9))) # scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary_2.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
#coord_cartesian(ylim = quantile(df$sil_coeff, c(0.1, 0.9))) # scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 #+
#coord_cartesian(ylim = quantile(df$sil_coeff, c(0.1, 0.9))) # scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary_2.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
stat_summary(fun.data = mean_se, geom = "errorbar")
#coord_cartesian(ylim = quantile(df$sil_coeff, c(0.1, 0.9))) # scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary_sd_error_bars.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
myplots <- list()
k <- 1
for (i in range_def){
df <- as.data.frame(list1[i-5])
clustm <- c("kmeans", "pam", "agnes", "clara", "diana")
mmm_df <- data.frame()
for (method in clustm){
mask_2 = df$method == method
df_mc_summary <- df[which(mask_2), ]
res.mean <- mean(df_mc_summary[,3])
res.median <- median(df_mc_summary[,3])
res.mode <- getmode(df_mc_summary[,3])
res.sd <- sd(df_mc_summary[,3])
x <- cbind(res.mean, res.median, res.mode, res.sd)
rownames(x) <- method
mmm_df <- rbind(mmm_df,x)
}
write.csv(mmm_df, file = sprintf("./tsne_sil_stat_analysis_%s/Mean - median - mode df %.0f clusters.csv", region_analysed, i))
res.boxplot_jitter <- ggplot(df, aes(x=method, y=sil_coeff, fill=method))+
stat_boxplot( aes(x=method, y=sil_coeff), geom='errorbar', linetype=1, width=0.5)+  #whiskers
geom_boxplot( aes(method, sil_coeff),outlier.shape=NA) +
stat_summary(fun.y=mean, geom="point", size = 0.3) + theme_1 +
stat_summary(fun.data = mean_se, geom = "errorbar")
#coord_cartesian(ylim = quantile(df$sil_coeff, c(0.1, 0.9))) # scale_y_continuous(limits = quantile(df$sil_coeff, c(0.1, 0.9)))
mu <- ddply(df, "method", summarise, grp.mean=mean(sil_coeff)) # calculate the mean for each method
res.density <- ggplot(df, aes(x=sil_coeff, color = method, fill = method)) +
geom_density(alpha=.05)+
scale_fill_manual(values=brewer.pal(n=5, name="Set1")) + geom_vline(data=mu, aes(xintercept=grp.mean, color=method), linetype="dashed") +
scale_color_manual(values=brewer.pal(n=5, name="Set1")) + ggtitle(sprintf("t-SNE density plot %.0f clusters",i)) + theme_2
res.density
myplots[[k]] <- res.boxplot_jitter
myplots[[k+1]] <- res.density
k <- k + 2
myplots
}
plot_width = 150
plot_height = 240
library(grid)
m_plots <- grid.arrange(grobs = myplots, ncol=2, nrow=(length(myplots)/2)) #, top = textGrob(paste(dim_red_method,region_analysed, "-", nclust, "clusters"), gp=gpar(fontsize=20,font=8)))
ggsave(filename = sprintf("./tsne_sil_stat_analysis_%s/t-sne clustering stat analysis summary_sd_error_bars.pdf",region_analysed),
plot = m_plots, width = plot_width, height = plot_height, units = "mm")
runApp('~/Repos/structural_elements_comparison/Dashboard_str_elements.R')
sdl_to_il <- readRDS(file = "./sdl_to_il_table.rds" )
# RStudio set wd to current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(shiny)          #shiny allows tranlation of R script into HTML
library(pracma)         #library for bi-linear interpolation fucntion
library(shinydashboard, warn.conflicts = FALSE) #shiny dashboard builder
library(readxl)          # for reading excel files
library(ggplot2)         # plotting donut charts
library(dplyr)           # enables %>% functino
#IMPORTING ALL THE NECESSARY FUNCTIONS CREATED IN ANOTHER FILE
source("Functions_str_elements.R")
sdl_to_il <- readRDS(file = "./sdl_to_il_table.rds" )
il_corrected <- get_il(sdl_to_il, sdll =input$sdl_rc, ill = input$il_rc)
il_corrected <- get_il(sdl_to_il, sdll = 1, ill = 2.5)
il_corrected
il_corrected <- get_il(sdl_to_il, sdll = 1, ill = 2.8)
il_corrected
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
runApp('Dashboard_str_elements.R')
